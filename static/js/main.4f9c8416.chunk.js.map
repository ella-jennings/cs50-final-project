{"version":3,"sources":["constants.js","components/deal/deal.jsx","components/card/card.jsx","components/city/city.jsx","components/cities/cities.jsx","components/helpers/calculator.js","App.js","serviceWorker.js","index.js"],"names":["CityEnum","InitialCities","cards","Deal1","selected","value","reference","Deal2","Deal3","2","3","4","5","6","7","8","9","10","colour","total","DealIcon","className","aria-label","focusable","data-prefix","data-icon","class","role","xmlns","viewBox","d","Card","props","name","onClick","setAsSelected","City","genericProps","cardValue","updateCardsForCity","Cities","useState","cities","setCities","setTotal","calculateScore","city","update","array","cardsForCity","card","push","listOfValues","score","multiplier","bonus","length","forEach","filter","CalculateScore","calculateTotal","customProps","App","href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4f9c8416.chunk.js","sourcesContent":["export const CityEnum = {\n    YELLOW: \"yellow\",\n    RED: \"red\",\n    BLUE: \"blue\",\n    PURPLE: \"purple\",\n    GREEN: \"green\", \n    WHITE: \"white\"\n}\n\nexport const Deal = \"Deal\";\n\nexport const GetInitialCards = () =>  {\n  return {\n    Deal1: {\n        selected: false,\n        value: Deal,\n        reference: \"Deal1\",\n    },\n    Deal2: {\n        selected: false,\n        value: Deal,\n        reference: \"Deal2\",\n    },\n    Deal3: {\n        selected: false,\n        value: Deal,\n        reference: \"Deal3\",\n    },\n    2: {\n        selected: false,\n        value: 2,\n        reference: 2,\n    },\n    3: {\n        selected: false,\n        value: 3,\n        reference: 3,\n    },\n    4: {\n        selected: false,\n        value: 4,\n        reference: 4,\n    },\n    5: {\n        selected: false,\n        value: 5,\n        reference: 5,\n    },\n    6: {\n        selected: false,\n        value: 6,\n        reference: 6,\n    },\n    7: {\n        selected: false,\n        value: 7,\n        reference: 7,\n    },\n    8: {\n        selected: false,\n        value: 8,\n        reference: 8,\n    },\n    9: {\n        selected: false,\n        value: 9,\n        reference: 9,\n    },\n    10: {\n        selected: false,\n        value: 10,\n        reference: 10,\n    },\n  }\n}\n  \nexport const InitialCities = {\n  [CityEnum.YELLOW]: {\n    cards: GetInitialCards(),\n    colour: CityEnum.YELLOW,\n    total: 0\n  },\n  [CityEnum.BLUE]: {\n    cards: GetInitialCards(),\n    colour: CityEnum.BLUE,\n    total: 0\n  },\n  [CityEnum.RED]: {\n    cards: GetInitialCards(),\n    colour: CityEnum.RED,\n    total: 0\n  },\n  [CityEnum.WHITE]: {\n    cards: GetInitialCards(),\n    colour: CityEnum.WHITE,\n    total: 0\n  },\n  [CityEnum.GREEN]: {\n    cards: GetInitialCards(),\n    colour: CityEnum.GREEN,\n    total: 0\n  },\n  [CityEnum.PURPLE]: {\n    cards: GetInitialCards(),\n    colour: CityEnum.PURPLE,\n    total: 0\n  }\n}","import React from 'react';\nimport './deal.css';\n\nconst DealIcon = ({className}) => {\n    return (\n        <svg aria-label=\"Deal card icon\" focusable=\"false\" data-prefix=\"far\" data-icon=\"handshake\" class={`dealCard dealCard${className}`} role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 512\">\n            <path d=\"M519.2 127.9l-47.6-47.6A56.252 56.252 0 0 0 432 64H205.2c-14.8 0-29.1 5.9-39.6 16.3L118 127.9H0v255.7h64c17.6 0 31.8-14.2 31.9-31.7h9.1l84.6 76.4c30.9 25.1 73.8 25.7 105.6 3.8 12.5 10.8 26 15.9 41.1 15.9 18.2 0 35.3-7.4 48.8-24 22.1 8.7 48.2 2.6 64-16.8l26.2-32.3c5.6-6.9 9.1-14.8 10.9-23h57.9c.1 17.5 14.4 31.7 31.9 31.7h64V127.9H519.2zM48 351.6c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16c0 8.9-7.2 16-16 16zm390-6.9l-26.1 32.2c-2.8 3.4-7.8 4-11.3 1.2l-23.9-19.4-30 36.5c-6 7.3-15 4.8-18 2.4l-36.8-31.5-15.6 19.2c-13.9 17.1-39.2 19.7-55.3 6.6l-97.3-88H96V175.8h41.9l61.7-61.6c2-.8 3.7-1.5 5.7-2.3H262l-38.7 35.5c-29.4 26.9-31.1 72.3-4.4 101.3 14.8 16.2 61.2 41.2 101.5 4.4l8.2-7.5 108.2 87.8c3.4 2.8 3.9 7.9 1.2 11.3zm106-40.8h-69.2c-2.3-2.8-4.9-5.4-7.7-7.7l-102.7-83.4 12.5-11.4c6.5-6 7-16.1 1-22.6L367 167.1c-6-6.5-16.1-6.9-22.6-1l-55.2 50.6c-9.5 8.7-25.7 9.4-34.6 0-9.3-9.9-8.5-25.1 1.2-33.9l65.6-60.1c7.4-6.8 17-10.5 27-10.5l83.7-.2c2.1 0 4.1.8 5.5 2.3l61.7 61.6H544v128zm48 47.7c-8.8 0-16-7.2-16-16s7.2-16 16-16 16 7.2 16 16c0 8.9-7.2 16-16 16z\"></path></svg>\n    )\n}\nexport default DealIcon;","import React from 'react';\nimport {Deal} from '../../constants';\nimport DealIcon from '../deal/deal';\nimport './card.scss'\n\nconst Card = (props) => {\n    let className = props.selected === true ? \"--selected\" : \"\";\n    const value = props.value === Deal ? <DealIcon className={className}/> : props.value;\n\n    return(\n        <button name={props.value} className={`card card_${props.colour} card${className}`} onClick={() => props.setAsSelected(props.reference)}>{value}</button>\n    )\n}\n\nexport default Card;","import React from 'react';\nimport Card from '../card/card.jsx'\nimport './city.scss';\n\nconst City = (props) => {\n    const className = `city_${props.colour}`;\n    let cards = props.cards;\n\n    const genericProps = {\n        setAsSelected: (cardValue) => props.updateCardsForCity(props.colour, cardValue),\n        colour: props.colour,\n    }\n\n    return (\n        <div className={`city_${props.colour} city`}>\n            <p className={`total total_${props.colour}`}>{props.total}</p>\n            <div className={\"cards\"}>\n                <Card {...genericProps} {...cards.Deal1}/>\n                <Card {...genericProps} {...cards.Deal2}/>\n                <Card {...genericProps} {...cards.Deal3}/>\n                <Card {...genericProps} {...cards[2]}/>\n                <Card {...genericProps} {...cards[3]}/>\n                <Card {...genericProps} {...cards[4]}/>\n                <Card {...genericProps} {...cards[5]}/>\n                <Card {...genericProps} {...cards[6]}/>\n                <Card {...genericProps} {...cards[7]}/>\n                <Card {...genericProps} {...cards[8]}/>\n                <Card {...genericProps} {...cards[9]}/>\n                <Card {...genericProps} {...cards[10]}/>\n            </div>\n        </div>\n    )\n}\n\nexport default City;","import React, {useState} from 'react';\nimport City from '../city/city.jsx'\nimport './cities.scss';\nimport {InitialCities, CityEnum} from '../../constants';\nimport {CalculateScore} from '../helpers/calculator';\n\n\nconst Cities = () => {\n    const [cities, setCities] = useState(InitialCities)\n    const [total, setTotal] = useState(0);\n   \n    const updateCardsForCity = (city, cardValue) => {\n      let update = {...cities};\n      update[city].cards[cardValue].selected = !update[city].cards[cardValue].selected\n      setCities(update);\n      calculateScore(city);\n      calculateTotal();\n    }\n    \n    const calculateScore = (city) => {\n      let update = {...cities};\n\n      let array = [];\n      const cardsForCity = update[city].cards;\n      for (var card in cardsForCity)\n      {\n          if(cardsForCity[card].selected){\n              array.push(cardsForCity[card].value);\n          }\n      }\n\n      update[city].total = CalculateScore(array);\n      setCities(update);\n    }\n\n    const calculateTotal = () => {\n      let total = 0;\n      for (var city in cities)\n      {\n          total += cities[city].total;\n      }\n      setTotal(total);\n    }\n\n    const customProps = {\n      updateCardsForCity: (city ,cardValue) => updateCardsForCity(city, cardValue)\n    }\n    return(\n      <div>\n        <div className={\"cities\"}>\n          <City {...cities[CityEnum.YELLOW]} {...customProps}/>\n          <City {...cities[CityEnum.BLUE]} {...customProps}/>\n          <City {...cities[CityEnum.WHITE]} {...customProps}/>\n          <City {...cities[CityEnum.GREEN]} {...customProps}/>\n          <City {...cities[CityEnum.RED]} {...customProps}/>\n          <City {...cities[CityEnum.PURPLE]} {...customProps}/>\n        </div>\n        <p className=\"total total_score\">Total Score: {total}</p>\n      </div>\n    )\n}\n\nexport default Cities;","import {Deal} from '../../constants';\n\nexport const CalculateScore = (listOfValues) => {\n    let score = 0;\n    let multiplier = 1;\n    let bonus = 0;\n    \n    const length = listOfValues.length;\n    if(length > 0) {\n        score -= 20;\n    }\n    if (length >= 8) {\n        bonus = 20;\n    }\n    listOfValues.forEach(value => {\n        if(value !== Deal) {\n            score += value;\n        }\n    });\n\n    const dealCards = listOfValues.filter(value =>  value === Deal);\n    multiplier += dealCards.length;\n\n    return (score * multiplier) + bonus;\n}\n","import React from 'react';\nimport './App.css';\nimport Cities from './components/cities/cities.jsx';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Lost Cities Calculator</h1>\n      </header>\n      <Cities/>\n      <p>svg obtained from <a href=\"https://fontawesome.com/license\">FontAwesome</a></p>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}